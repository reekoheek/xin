(window.webpackJsonp=window.webpackJsonp||[]).push([[0,9],{27:function(t,i,e){"use strict";e.r(i);var s=e(9),n=e(48);Object(s.b)("x-app-route",class extends n.View{get template(){return e(41)}})},41:function(t,i){t.exports='<div class="padding container"> <h2>App, views, and routing</h2> <p> Xin has built-in multi views application model. All you have to do is using xin-app, xin-view and xin-pager. </p> <p> Below is example to create application with multiple views. </p> <code><pre>\n&lt;xin-app&gt;\n  &lt;template&gt;\n    &lt;div&gt;\n      &lt;a href="#!/"&gt;Home&lt;/a&gt;\n      &lt;a href="#!/foo"&gt;Foo&lt;/a&gt;\n      &lt;a href="#!/bar"&gt;Bar&lt;/a&gt;\n    &lt;/div&gt;\n\n    &lt;xin-pager&gt;\n      &lt;xin-view uri="/"&gt;\n        &lt;template&gt;\n          This is home\n        &lt;/template&gt;\n      &lt;/xin-view&gt;\n\n      &lt;xin-view uri="/foo"&gt;\n        &lt;template&gt;\n          This is foo\n        &lt;/template&gt;\n      &lt;/xin-view&gt;\n\n      &lt;xin-view uri="/bar"&gt;\n        &lt;template&gt;\n          This is bar\n        &lt;/template&gt;\n      &lt;/xin-view&gt;\n    &lt;/xin-pager&gt;\n  &lt;/template&gt;\n&lt;/xin-app&gt;</pre></code> </div> '},48:function(t,i,e){"use strict";e.r(i);var s=e(8),n=e(0);class r extends s.a{get props(){const t=this.__repository.get("view.transitionIn")||this.__repository.get("view.transition")||"slide",i=this.__repository.get("view.transitionOut")||this.__repository.get("view.transition")||"fade";return Object.assign({},super.props,{uri:{type:String,required:!0},transitionIn:{type:String,value:t},transitionOut:{type:String,value:i},title:{type:String,value:()=>`View ${this.uri}`}})}focusing(){}focused(){}blurred(){}created(){super.created(),this.classList.add("xin-view")}ready(){super.ready(),this.inFx=new n.a({element:this,transition:this.transitionIn,method:"in"}),this.outFx=new n.a({element:this,transition:this.transitionOut,method:"out"})}attached(){super.attached(),this.classList.remove("xin-view--focus"),this.classList.remove("xin-view--visible"),this.__app?(this.__app.route(this.uri,t=>{this.focus(t)}),this.fire("routed")):console.error("Cannot route view to undefined app")}async focus(t={}){this.set("parameters",t),await this.focusing(t),this.fire("focusing",t),this.async(()=>{"setFocus"in this.parentElement?this.parentElement.setFocus(this):(this.setVisible(!0),this.setFocus(!0))})}setVisible(t){if(t)return this.classList.add("xin-view--visible"),void this.fire("show",{view:this});this.classList.remove("xin-view--visible"),this.querySelectorAll(".xin-view.xin-view--visible").forEach(i=>i.setVisible(t)),this.fire("hide",{view:this})}async setFocus(t){if(t)return this.classList.add("xin-view--focus"),await this.focused(),void this.fire("focus",{view:this});this.classList.remove("xin-view--focus"),this.querySelectorAll(".xin-view.xin-view--focus").forEach(i=>{"setFocus"in i.parentElement?i.parentElement.setFocus(null):i.setFocus(t)}),await this.blurred(),this.fire("blur",{view:this})}}Object(s.c)("xin-view",r),e.d(i,"View",function(){return r})}}]);