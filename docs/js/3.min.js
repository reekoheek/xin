(window.webpackJsonp=window.webpackJsonp||[]).push([[3,11],{30:function(e,t,i){"use strict";i.r(t);var s=i(9),r=i(48),n=i(44),o=i.n(n);Object(s.b)("x-for",class extends r.View{get template(){return o.a}get listeners(){return{"submit #userForm":"preSubmit(evt)"}}get props(){return Object.assign({},super.props,{products:{type:Array,value:()=>[]},foo:{type:String,value:"FOO"}})}focusing(){super.focusing(),this.set("products",[{name:"Foo",price:1e3},{name:"Bar",price:2300},{name:"Baz",price:41200}])}blurred(){super.blurred()}formatPrice(e){return`Rp ${e}`}addNewProduct(e){e.preventDefault(),this.push("products",{name:`User-${(new Date).getTime()}`,price:1e3*Math.random()|0})}deleteProduct(e){this.splice("products",e,1)}})},44:function(e,t){e.exports=' <div class="padding container"> <h2>xin-for</h2> <p>Click product to delete</p> <input type=text value={{foo}}> <ul> <xin-for id=forFor items=[[products]] as=product> <template> <li (click)=deleteProduct(index)> <span>[[product.name]]</span> - <span>[[foo]]</span> <span style=float:right>[[formatPrice(product.price)]]</span> </li> </template> </xin-for> </ul> <a href=# (click)=addNewProduct(evt)>Add New Product</a> </div> '},48:function(e,t,i){"use strict";i.r(t);var s=i(8),r=i(0);class n extends s.a{get props(){const e=this.__repository.get("view.transitionIn")||this.__repository.get("view.transition")||"slide",t=this.__repository.get("view.transitionOut")||this.__repository.get("view.transition")||"fade";return Object.assign({},super.props,{uri:{type:String,required:!0},transitionIn:{type:String,value:e},transitionOut:{type:String,value:t},title:{type:String,value:()=>`View ${this.uri}`}})}focusing(){}focused(){}blurred(){}created(){super.created(),this.classList.add("xin-view")}ready(){super.ready(),this.inFx=new r.a({element:this,transition:this.transitionIn,method:"in"}),this.outFx=new r.a({element:this,transition:this.transitionOut,method:"out"})}attached(){super.attached(),this.classList.remove("xin-view--focus"),this.classList.remove("xin-view--visible"),this.__app?(this.__app.route(this.uri,e=>{this.focus(e)}),this.fire("routed")):console.error("Cannot route view to undefined app")}async focus(e={}){this.set("parameters",e),await this.focusing(e),this.fire("focusing",e),this.async(()=>{"setFocus"in this.parentElement?this.parentElement.setFocus(this):(this.setVisible(!0),this.setFocus(!0))})}setVisible(e){if(e)return this.classList.add("xin-view--visible"),void this.fire("show",{view:this});this.classList.remove("xin-view--visible"),this.querySelectorAll(".xin-view.xin-view--visible").forEach(t=>t.setVisible(e)),this.fire("hide",{view:this})}async setFocus(e){if(e)return this.classList.add("xin-view--focus"),await this.focused(),void this.fire("focus",{view:this});this.classList.remove("xin-view--focus"),this.querySelectorAll(".xin-view.xin-view--focus").forEach(t=>{"setFocus"in t.parentElement?t.parentElement.setFocus(null):t.setFocus(e)}),await this.blurred(),this.fire("blur",{view:this})}}Object(s.c)("xin-view",n),i.d(t,"View",function(){return n})}}]);