(window.webpackJsonp=window.webpackJsonp||[]).push([[4,13],{31:function(e,t,i){"use strict";i.r(t);var n=i(9),s=i(48);Object(n.b)("x-intro",class extends s.View{get template(){return i(45)}})},45:function(e,t){e.exports='<div class="padding container"> <h2>Intro</h2> <p> Xin is Single Page Application framework using javascript. Xin powered by beloved opensource projects and specs, </p> <ul> <li>New spec of Javascript (ES6+)</li> <li>NPM / Yarn</li> <li>Webpack</li> </ul> <h3>Getting started</h3> <p>For quick start you can use template provided by community. Just download or clone web example that already use xin from `https://github.com/reekoheek/xin-example`.</p> <code><pre>\nwget https://github.com/reekoheek/xin-example/archive/master.zip\nunzip master.zip\ncd xin-example-master\nnpm i\nnpm run dev</pre></code> <p>Any help to compose yo generator accepted. ;)</p> <h3>Selectors</h3> <p>You can select element by id inside component context using component.$</p> <code><pre>\n&lt;my-component id="myComponent"&gt;\n  &lt;template&gt;\n    &lt;input type="text" id="foo"&gt;\n    &lt;input type="text" id="bar"&gt;\n  &lt;/template&gt;\n&lt;/my-component&gt;</pre></code> <code><pre>\nlet compFoo = myComponent.$.foo;\n\nassert(compFoo === document.getElementById(\'foo\'));</pre></code> <p>You can select element by css selector inside component context using component.$$()</p> <code><pre>\n&lt;my-component id="myComponent"&gt;\n  &lt;template&gt;\n    &lt;input type="text"&gt;\n    &lt;input type="button"&gt;\n  &lt;/template&gt;\n&lt;/my-component&gt;</pre></code> <code><pre>\nlet textInput = myComponent.$$(\'input[type=text]\');\nlet button = myComponent.$$(\'input[type=button]\');</pre></code> </div> '},48:function(e,t,i){"use strict";i.r(t);var n=i(8),s=i(0);class o extends n.a{get props(){const e=this.__repository.get("view.transitionIn")||this.__repository.get("view.transition")||"slide",t=this.__repository.get("view.transitionOut")||this.__repository.get("view.transition")||"fade";return Object.assign({},super.props,{uri:{type:String,required:!0},transitionIn:{type:String,value:e},transitionOut:{type:String,value:t},title:{type:String,value:()=>`View ${this.uri}`}})}focusing(){}focused(){}blurred(){}created(){super.created(),this.classList.add("xin-view")}ready(){super.ready(),this.inFx=new s.a({element:this,transition:this.transitionIn,method:"in"}),this.outFx=new s.a({element:this,transition:this.transitionOut,method:"out"})}attached(){super.attached(),this.classList.remove("xin-view--focus"),this.classList.remove("xin-view--visible"),this.__app?(this.__app.route(this.uri,e=>{this.focus(e)}),this.fire("routed")):console.error("Cannot route view to undefined app")}async focus(e={}){this.set("parameters",e),await this.focusing(e),this.fire("focusing",e),this.async(()=>{"setFocus"in this.parentElement?this.parentElement.setFocus(this):(this.setVisible(!0),this.setFocus(!0))})}setVisible(e){if(e)return this.classList.add("xin-view--visible"),void this.fire("show",{view:this});this.classList.remove("xin-view--visible"),this.querySelectorAll(".xin-view.xin-view--visible").forEach(t=>t.setVisible(e)),this.fire("hide",{view:this})}async setFocus(e){if(e)return this.classList.add("xin-view--focus"),await this.focused(),void this.fire("focus",{view:this});this.classList.remove("xin-view--focus"),this.querySelectorAll(".xin-view.xin-view--focus").forEach(t=>{"setFocus"in t.parentElement?t.parentElement.setFocus(null):t.setFocus(e)}),await this.blurred(),this.fire("blur",{view:this})}}Object(n.c)("xin-view",o),i.d(t,"View",function(){return o})}}]);